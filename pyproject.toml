[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mygh"
version = "0.1.1"
description = "A comprehensive GitHub CLI tool built with Python and Typer"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Ryan Cheley", email = "ryan.cheley@gmail.com" },
]
keywords = ["github", "cli", "tool", "api", "command-line"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Environment :: Console",
]
dependencies = [
    "typer>=0.9.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.urls]
Homepage = "https://github.com/ryancheley/MyGH"
Repository = "https://github.com/ryancheley/MyGH"
Documentation = "https://github.com/ryancheley/MyGH#readme"
Issues = "https://github.com/ryancheley/MyGH/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "respx>=0.20.0",
    "ruff>=0.0.280",
    "mypy>=1.0.0",
]

[project.scripts]
mygh = "mygh.cli.main:app"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "respx>=0.20.0",
    "ruff>=0.0.280",
    "mypy>=1.0.0",
    "tox>=4.0.0",
    "types-requests",
    "twine>=6.1.0",
]

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "tests/",
    "CLAUDE.md",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["mygh"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --cov=mygh --cov-report=term-missing --cov-report=html --cov-fail-under=95"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"


[tool.coverage.run]
source = ["src/mygh"]
branch = true
omit = [
    "tests/*",
    "src/mygh/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
