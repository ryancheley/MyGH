name: Maintenance

on:
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  dependency-update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Update dependencies
      run: |
        uv lock --upgrade
        uv sync --dev
    
    - name: Run tests after update
      run: |
        uv run pytest tests/ --cov=src/mygh --cov-fail-under=95
    
    - name: Run linting after update
      run: |
        uv run ruff check src tests
        uv run ruff format --check src tests
        uv run mypy src/mygh || echo "Type checking completed with warnings"
    
    - name: Create Pull Request
      if: success()
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "‚¨ÜÔ∏è Update dependencies"
        title: "‚¨ÜÔ∏è Weekly dependency update"
        body: |
          Automated dependency update
          
          - Updated all dependencies to latest versions
          - All tests passing
          - Linting and type checking successful
          
          ü§ñ Auto-generated by GitHub Actions
        branch: dependencies/weekly-update
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run security audit
      run: |
        uv add --dev safety bandit[toml]
        uv run safety check --json --output safety-report.json || true
        uv run bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
        retention-days: 90

  cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - name: Delete old workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 30
        keep_minimum_runs: 10
